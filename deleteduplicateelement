/*
Given an array a[] of size N which contains elements from 0 to N-1, you need to find all the elements occurring more than once in the given array.

Example 1:

Input:
N = 4
a[] = {0,3,1,2}
Output: -1
Explanation: N=4 and all elements from 0
to (N-1 = 3) are present in the given
array. Therefore output is -1.*/

#include <bits/stdc++.h>
using namespace std;
vector<int> duplicates(int arr[], int n);
int main() {
    int t;
    cin >> t;
    while (t-- > 0) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++) cin >> a[i];
        vector<int> ans = duplicates(a, n);
        for (int i : ans) cout << i << ' ';
        cout << endl;
    }
    return 0;
}
vector<int> duplicates(int a[], int n) {
    // code here
    map<int, int> count;
    vector<int> arr;
    for(int i=0;i<n;i++)
    {
        count[a[i]]++;
    }
    for(auto iter=count.begin();iter!=count.end();iter++)
    {
        if(iter->second > 1)
        arr.push_back(iter->first);
    }
    if(arr.size()==0)
    arr.push_back(-1);
    return arr;
}
